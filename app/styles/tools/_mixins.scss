// Media Queries
//
// Simplifies management of media queries in our CSS. Takes our content,
// eats a cookie and wraps it in a media query. Automagically.
// ----------------------------------------------------------------------------
@mixin mq($name) {
    // If the key exists in the map
    @if map-has-key($grid-breakpoints, $name) {
        // Prints a media query based on the value
        @media #{inspect(map-get($grid-breakpoints, $name))} {
            @content;
        }
    // If the key doesn't exist in the map
    } @else {
        @warn "No value could be retrieved from `#{$grid-breakpoints}`. "
        + "Please make sure it's defined in the `$iz-breakpoints` map.";
    }
}


// Form validation states
//
// Used in _forms.scss to generate the form validation CSS for warnings, errors,
// and successes.
// ----------------------------------------------------------------------------
@mixin form-control-validation($color) {
    // Color the label and help text
    .help-block,
    .form-control-label,
    .radio,
    .checkbox,
    .radio-inline,
    .checkbox-inline,
    &.radio label,
    &.checkbox label,
    &.radio-inline label,
    &.checkbox-inline label {
        color: $color;
    }

    // Set the border and box shadow on specific inputs to match
    .form-control {
        border-color: $color;

        &:focus {
            border-color: shade($border-color, 15%);
        }
    }

    // Set validation states also for addons
    .input-group-addon {
        background-color: tint($color, 30%);
        border-color: $color;
        color: $color;
    }

    // Optional feedback icon
    .form-control-feedback {
        color: $color;
    }
}


// Clearfix
//
// Outputs a simple clearfix.
// ----------------------------------------------------------------------------
%clearfix {
    &::after {
        clear: both;
        content: "";
        display: table;
    }
}


// Hide Text
//
// Hides text effectively, avoids painting a block -9999px off-screen.
// ----------------------------------------------------------------------------
%hide-text {
    overflow: hidden;
    text-indent: 101%; // bump value if content is drawn in viewport
    white-space: nowrap;
}


// Vertical Align
//
// Vertically align any element.
//
// @notes Use `transform-style: preserve-3d` on the container element to
// prevent blurry edges caused by half-pixels.
// ----------------------------------------------------------------------------
%vertical-align {
    position: relative;
    top: 50%;
    transform: translateY(-50%);
}
